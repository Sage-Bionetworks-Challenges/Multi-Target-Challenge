read_csv(prediction_paths[[x]]) %>%
gather(cmpd_id, confidence ,-target) %>%
mutate(participant_name = x)
}) %>% bind_rows() %>%
left_join(query %>% select(participant_name, rank))
mean_preds_sc2 <- lapply(unique(pred_df$rank), function(i){
colname <- paste0('median_ensemble_',i)
foo <- pred_df %>%
filter(rank <= i) %>%
group_by(target, cmpd_id) %>%
summarize(!!colname := mean(confidence)) %>%
ungroup()
foo
})
ensemble_inclusions <- pred_df %>%
select(participant_name, rank)
ensemble_inclusions <- pred_df %>%
select(participant_name, rank) %>%
distinct
ensemble_inclusions
query <- synTableQuery('select * from syn21628283 where submissionId < 9699164')$filepath %>%
read_csv()
scores <- synTableQuery('SELECT * FROM syn21609491 where status = \'ACCEPTED\'', includeRowIdAndRowVersion = F)$filepath %>%
read_csv()
View(scores)
query <- inner_join(query, scores, by = c("submissionId" = "objectId")) %>%
arrange(desc(sc1_score)) %>%
mutate(rank = 1:nrow(.))
query <- synTableQuery('select * from syn21628283 where submissionId < 9699164')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283 where submissionId < 9699164')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283 where submissionId < 9699164 and userId is not \'2224045\'')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283 where submissionId < 9699164 and userId not \'2224045\'')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283 where submissionId < 9699164 and userId != \'2224045\'')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283 where submissionId < 9699164, userId != \'2224045\'')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283 where submissionId is not 9696740')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283 where submissionId is not \'9696740\'')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283 where submissionId not \'9696740\'')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283 where submissionId != \'9696740\'')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283 where submissionId != 9696740')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283 where submissionId not 9696740')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283 where \'submissionId\' not 9696740')$filepath %>%
read_csv()
query <- synTableQuery('select * from syn21628283 where \\\'submissionId\\\' not 9696740')$filepath %>%
read_csv()
query <- synTableQuery("select * from syn21628283 where 'submissionId' not 9696740")$filepath %>%
read_csv()
query <- synTableQuery("select * from syn21628283 where 'submissionId' is not 9696740")$filepath %>%
read_csv()
query <- synTableQuery("select * from syn21628283 where 'submissionId' not 9696740")$filepath %>%
read_csv()
query <- synTableQuery("select * from syn21628283")$filepath %>%
read_csv() %>%
filter(submissionId != 9696740)
scores <- synTableQuery('SELECT * FROM syn21609491 where status = \'ACCEPTED\'', includeRowIdAndRowVersion = F)$filepath %>%
read_csv()
query <- inner_join(query, scores, by = c("submissionId" = "objectId")) %>%
arrange(desc(sc1_score)) %>%
mutate(rank = 1:nrow(.))
query <- synTableQuery("select * from syn21628283")$filepath %>%
read_csv() %>%
filter(submissionId != 9696740)
scores <- synTableQuery('SELECT * FROM syn21609491 where status = \'ACCEPTED\'', includeRowIdAndRowVersion = F)$filepath %>%
read_csv()
query <- inner_join(query, scores, by = c("submissionId" = "objectId")) %>%
arrange(desc(sc1_score)) %>%
mutate(rank = 1:nrow(.))
scores <- synTableQuery('SELECT * FROM syn21609491 where status = \'ACCEPTED\'', includeRowIdAndRowVersion = F)$filepath %>%
read_csv()
View(scores)
query <- synTableQuery("select * from syn21628283")$filepath %>%
read_csv() %>%
filter(submissionId != 9696740)
scores <- synTableQuery('SELECT * FROM syn21609491 where status = \'ACCEPTED\'', includeRowIdAndRowVersion = F)$filepath %>%
read_csv()
query <- inner_join(query, scores, by = c("submissionId" = "objectId")) %>%
arrange(desc(sc1_score)) %>%
mutate(rank = 1:nrow(.))
prediction_paths <- sapply(query$id, function(x){
synGet(x)$path
})
query <- full_join(query, scores, by = c("submissionId" = "objectId")) %>%
arrange(desc(sc1_score)) %>%
mutate(rank = 1:nrow(.))
query <- synTableQuery("select * from syn21628283")$filepath %>%
read_csv() %>%
filter(submissionId != 9696740)
scores <- synTableQuery('SELECT * FROM syn21609491 where status = \'ACCEPTED\'', includeRowIdAndRowVersion = F)$filepath %>%
read_csv()
query <- full_join(query, scores, by = c("submissionId" = "objectId")) %>%
arrange(desc(sc1_score)) %>%
mutate(rank = 1:nrow(.))
query <- synTableQuery("SELECT * FROM syn22316156")$filepath %>%
read_csv() %>%
filter(submissionId != 9696740)
View(query)
query <- synTableQuery("SELECT * FROM syn22316156")$filepath %>%
read_csv()
query <- synTableQuery("SELECT * FROM syn22316156")$filepath %>%
read_csv() %>%
filter(ROW_ID != 9696740)
query <- synTableQuery("SELECT * FROM syn22316156 where status = \'ACCEPTED\'")$filepath %>%
read_csv() %>%
filter(ROW_ID != 9696740)
query <- query %>%
arrange(desc(sc1_score)) %>%
mutate(rank = 1:nrow(.))
query <- query %>%
arrange(desc(sc1_score)) %>%
mutate(rank = 1:nrow(.))
query <- synTableQuery("SELECT * FROM syn22316156 where status = \'ACCEPTED\'")$filepath %>%
read_csv() %>%
filter(ROW_ID != 9696740, !is.na(writeup))
query <- synTableQuery("SELECT * FROM syn22316156 where status = \'ACCEPTED\'")$filepath %>%
read_csv() %>%
filter(ROW_ID != 9696740, !is.na(write
Up))
query <- synTableQuery("SELECT * FROM syn22316156 where status = \'ACCEPTED\'")$filepath %>%
read_csv() %>%
filter(ROW_ID != 9696740, !is.na(writeUp))
set.seed(98056)
library(tidyverse)
library(reticulate)
library(limma)
install.packages(limma)
install.packages('limma')
BiocManager::install("limma")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("limma")
ls
beans and cornbread
set.seed(98056)
library(tidyverse)
library(reticulate)
library(limma)
library(challengescoring)
library(ggplot2)
# Synapse setup to use `reticulate`
use_condaenv("synapse-r")
synapseclient <- reticulate::import('synapseclient')
syn <- synapseclient$Synapse()
syn$login(silent = T)
# Prediction data
query <- syn$tableQuery(
"SELECT id, submitterid, prediction_fileid
FROM syn22231795 WHERE status = 'ACCEPTED' AND writeUp <> ''
ORDER BY auroc DESC")$asDataFrame()
# Synapse setup to use `reticulate`
use_condaenv("synapse-2")
# Prediction data
query <- syn$tableQuery(
"SELECT id, submitterid, prediction_fileid
FROM syn22231795 WHERE status = 'ACCEPTED' AND writeUp <> ''
ORDER BY auroc DESC")$asDataFrame()
set.seed(98056)
library(tidyverse)
library(reticulate)
library(limma)
library(challengescoring)
library(ggplot2)
# Synapse setup to use `reticulate`
use_condaenv("synapse-2")
synapseclient <- reticulate::import('synapseclient')
syn <- synapseclient$Synapse()
syn$login(silent = T)
# Prediction data
query <- syn$tableQuery(
"SELECT id, submitterid, prediction_fileid
FROM syn22231795 WHERE status = 'ACCEPTED' AND writeUp <> ''
ORDER BY auroc DESC")$asDataFrame()
# For easier identification, replace each team/participant's submitterid with
# their team name/username.
query$submitterid <- as.character(query$submitterid)
team_names <- sapply(query$submitterid, function(sub) {
if (sub == 3406894) {
return("Baseline")
}
name <- tryCatch({
syn$getUserProfile(sub)$userName
}, error = function(err) {
syn$getTeam(sub)$name
})
return(name)
})
query$submitterid <- team_names
pred_filenames <- lapply(query$prediction_fileid, function(id) {
syn$get(id)$path
})
names(pred_filenames) <- team_names
# Goldstandard
gold_pval <- read_csv(syn$get("syn21989021")$path)
#gold_auc <- read_csv(syn$get("syn21989022")$path)
# Helper functions
score_auroc <- function(gold, pred) {
# classify goldstandard into binary data
gold[-1][gold[-1] <= 0.05] <- 1
gold[-1][gold[-1] != 1] <- 0
aurocs <- sapply(2:ncol(gold), function(i) {
# to account for potential missing data in goldstandard
truth_val <- gold[which(!is.na(gold[, i])), i] %>% pluck(1)
pred_val <- pred[which(!is.na(gold[, i])), i] %>% pluck(1)
auROC(
truth_val,
pred_val
)
})
round(mean(aurocs), digits = 4)
}
score_spearman <- function(gold, pred) {
# reorder prediction file to match order in goldstandard
pred <- pred[match(gold$cell_line, pred$cell_line), ]
cors <- sapply(2:ncol(gold), function(i) {
cor(
pred[, i], 1 - gold[, i],
use = "pairwise.complete.obs",
method = "spearman"
)
})
round(mean(cors), digits = 4)
}
computeBayesFactor <- function(bootstrapMetricMatrix,
refPredIndex,
invertBayes){
M <- as.data.frame(bootstrapMetricMatrix - bootstrapMetricMatrix[,refPredIndex])
K <- apply(M ,2, function(x) {
k <- sum(x >= 0)/sum(x < 0)
if(sum(x >= 0) > sum(x < 0)){
return(k)
}else{
return(1/k)
}
})
if(invertBayes == T){K <- 1/K}
K[refPredIndex] <- 0
return(K)
}
challengescoring::computeBayesFactor()
challengescoring::computeBayesFactor
1/0
N <- 1000  # number of bootstrapped scores to be calculated
bs_indices <- matrix(1:nrow(gold_pval), nrow(gold_pval), N) %>%
apply(2, sample, replace = T)
boot <- sapply(names(pred_filenames), function(team) {
pred <- read_csv(pred_filenames[[team]])
# reorder prediction file to match order in goldstandard
pred <- pred[match(gold_pval$cell_line, pred$cell_line), ]
apply(bs_indices, 2, function(ind) {
score_auroc(gold_pval[ind, ], pred[ind, ])
})
})
boot %>%
as_tibble() %>%
gather(submission, bs_score) %>%
left_join(bayes) %>%
mutate(bayes_category=case_when(
bayes == 0 ~ "Reference",
bayes<=3 ~ "<3",
bayes>=3 & bayes <5 ~ "3-5",
bayes>=5 & bayes <10 ~ "5-10",
bayes>=10 ~ ">10")) %>%
ggplot(aes(
x=fct_reorder(submission, bs_score, .fun = mean),
y=bs_score,
color=bayes_category
)) +
geom_boxplot() +
theme_bw() +
scale_color_manual(values = c(
"Reference"="#d32e36",
'<3' = '#cf4d6f',
"3-5" = "#cc7e85",
"5-10" = '#c5afa4',
">10" = "#a8a6a4"),
name = "Bayes Factor") +
coord_flip() +
labs(x="Team", y=paste("Bootstrapped AUROC"))
bayes <- computeBayesFactor(boot, refPredIndex = 1, invertBayes = F) %>%
as_tibble(rownames = "submission") %>%
rename(bayes = value)
View(bayes)
bayes <- challengescoring::computeBayesFactor(boot, refPredIndex = 1, invertBayes = F) %>%
as_tibble(rownames = "submission") %>%
rename(bayes = value)
bayes <- challengescoring(boot, refPredIndex = 1, invertBayes = F) %>%
as_tibble(rownames = "submission") %>%
rename(bayes = value)
bayes <- challengescoring(boot, refPredIndex = 1, invertBayes = F) %>%
as_tibble(rownames = "submission") %>%
rename(bayes = value)
bayes <- challengescoring::computeBayesFactor(boot, refPredIndex = 1, invertBayes = T) %>%
as_tibble(rownames = "submission") %>%
rename(bayes = value)
bayes <- computeBayesFactor(boot, refPredIndex = 1, invertBayes = F) %>%
as_tibble(rownames = "submission") %>%
rename(bayes = value)
bayes
boot %>%
as_tibble() %>%
gather(submission, bs_score) %>%
left_join(bayes) %>%
mutate(bayes_category=case_when(
bayes == 0 ~ "Reference",
bayes<=3 ~ "<3",
bayes>=3 & bayes <5 ~ "3-5",
bayes>=5 & bayes <10 ~ "5-10",
bayes>=10 ~ ">10")) %>%
ggplot(aes(
x=fct_reorder(submission, bs_score, .fun = mean),
y=bs_score,
color=bayes_category
)) +
geom_boxplot() +
theme_bw() +
scale_color_manual(values = c(
"Reference"="#d32e36",
'<3' = '#cf4d6f',
"3-5" = "#cc7e85",
"5-10" = '#c5afa4',
">10" = "#a8a6a4"),
name = "Bayes Factor") +
coord_flip() +
labs(x="Team", y=paste("Bootstrapped AUROC"))
library(tidyverse)
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv')
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv') %>%
separate(Description, c("Description", "Source_2"), ";")
View(foo)
?separate
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv') %>%
separate(Description, c("Description", "Source_2"), ";", extra = merge) %>%
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv') %>%
separate(Description, c("Description", "Source_2"), ";", extra = merge)
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv') %>%
separate(Description, c("Description", "Source_2"), ";", extra = merge)
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv') %>%
separate(Description, c("Description", "Source_2"), ";", extra = "merge")
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv') %>%
separate(Description, c("Description", "Source_2"), "; [", extra = "merge")
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv') %>%
separate(Description, c("Description", "Source_2"), "; \\[", extra = "merge")
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv') %>%
separate(Description, c("Description", "Source_2"), "; \\[", extra = "merge") %>%
mutate(Source = case_when(is.na(Source) ~ Source_2,
!is.na(Source) ~ Source)) %>%
mutate(Source = stringr::str_remove("\\]$", Source))
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv') %>%
separate(Description, c("Description", "Source_2"), "; \\[", extra = "merge") %>%
mutate(Source = case_when(is.na(Source) ~ Source_2,
!is.na(Source) ~ Source)) %>%
mutate(Source = stringr::str_remove("\\]^", Source))
select(-Source_2)
?str_remove
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv') %>%
separate(Description, c("Description", "Source_2"), "; \\[", extra = "merge") %>%
mutate(Source = case_when(is.na(Source) ~ Source_2,
!is.na(Source) ~ Source)) %>%
mutate(Source = stringr::str_remove(Source, "\\]"))
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv') %>%
separate(Description, c("Description", "Source_2"), "; \\[", extra = "merge") %>%
mutate(Source = case_when(is.na(Source) ~ Source_2,
!is.na(Source) ~ Source)) %>%
mutate(Source = stringr::str_remove(Source, "\\]")) %>%
select(-Source_2)
setwd("~/")
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv') %>%
separate(Description, c("Description", "Source_2"), "; \\[", extra = "merge") %>%
mutate(Source = case_when(is.na(Source) ~ Source_2,
!is.na(Source) ~ Source)) %>%
mutate(Source = stringr::str_remove(Source, "\\]")) %>%
select(-Source_2) %>%
write_csv('NFschema_v5.csv')
foo <- readr::read_csv('~/downloads/NF schema - Sheet1(3).csv') %>%
separate(Description, c("Description", "Source_2"), "; \\[", extra = "merge") %>%
mutate(Source = case_when(is.na(Source) ~ Source_2,
!is.na(Source) ~ Source)) %>%
mutate(Source = stringr::str_remove(Source, "\\]")) %>%
select(-Source_2) %>%
write_csv('NFschema_v5.csv', na = "")
a <- c('a', "b", "c")
b <- c('b', "c", "d")
match(a,b)
setwd("~/Documents/Github/challenges/ctd2-drug-activity-analysis/analysis")
setwd("~/Documents/Github/Multi-Target-Challenge/challenge_analysis")
setwd("~/Documents/Github/Multi-Target-Challenge/challenge_analysis")
##counts provided by Cagan lab
fly_counts <- read_csv("fly_counts.csv") %>%
rename(pupae = pupae_count,
adult = adult_count) %>%
tidyr::gather(key = "stage", value = "count", pupae, adult) %>%
mutate(percent = count/total_count*100) %>%
group_by(tx, genotype, stage) %>%
mutate(tx_alpha = str_extract(tx, "\\d+uM") %>% str_extract(., "\\d+") %>% as.numeric() %>% rank) %>%
mutate(tx_alpha = case_when(is.na(tx_alpha) ~ 0,
!is.na(tx_alpha) ~ tx_alpha)) %>%
mutate(tx_name = str_extract(tx, "[[:alnum:]]+")) %>%
mutate(genotype = case_when(genotype=="ret2b" ~ "RET2B",
genotype!="ret2b" ~ "Control")) %>%
mutate(stage = tools::toTitleCase(stage))
library(tidyverse)
library(tidyverse)
ord <- c("DMSO","ZINC4020-1uM","ZINC4020-10uM","ZINC4020-50uM","ZINC9820-1uM","ZINC9820-10uM","ZINC9820-50uM","AD80-1uM","AD80-10uM","AD80-50uM","APS 6-45 1uM","APS 6-45 10uM","APS 6-45 50uM")
##counts provided by Cagan lab
fly_counts <- read_csv("fly_counts.csv") %>%
rename(pupae = pupae_count,
adult = adult_count) %>%
tidyr::gather(key = "stage", value = "count", pupae, adult) %>%
mutate(percent = count/total_count*100) %>%
group_by(tx, genotype, stage) %>%
mutate(tx_alpha = str_extract(tx, "\\d+uM") %>% str_extract(., "\\d+") %>% as.numeric() %>% rank) %>%
mutate(tx_alpha = case_when(is.na(tx_alpha) ~ 0,
!is.na(tx_alpha) ~ tx_alpha)) %>%
mutate(tx_name = str_extract(tx, "[[:alnum:]]+")) %>%
mutate(genotype = case_when(genotype=="ret2b" ~ "RET2B",
genotype!="ret2b" ~ "Control")) %>%
mutate(stage = tools::toTitleCase(stage))
print(min(fly_counts$total_count))
print(max(fly_counts$total_count))
glue::glue("min counts: {min(fly_counts$total_count)}")
glue::glue("max counts: {max(fly_counts$total_count)}")
glue::glue("min flies counted: {min(fly_counts$total_count)}")
glue::glue("max flies counted: {max(fly_counts$total_count)}")
View(fly_counts)
fly_count_summary_table <- fly_counts %>%
group_by(tx, genotype, stage) %>%
summarize(mean_percent_survival = mean(percent),
std_dev_survival = sd(percent))
View(fly_count_summary_table)
ggplot(data = fly_counts) +
geom_bar(aes(x = fct_relevel(tx, ord),
y = percent,
fill = tx_name), stat = 'summary', fun.data = mean_se) +
stat_summary(aes(x = fct_relevel(tx, ord),
y = percent),
fun.data = mean_se,
geom = "errorbar") +
ggpubr::stat_compare_means(aes(x = fct_relevel(tx, ord), y = percent),
ref.group = "DMSO", hide.ns = TRUE,
method = "wilcox.test",
label = "p.signif",
label.y.npc = 0.9,
symnum.args = symnum.args) +
facet_wrap(genotype~fct_relevel(stage, "Pupae", "Adult"))+
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
labs(x = "Treatment", y = "Mean Survival (%)") +
guides(fill = F)
symnum.args <- list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1), symbols = c("****", "***", "**", "*", "ns"))
ggplot(data = fly_counts) +
geom_bar(aes(x = fct_relevel(tx, ord),
y = percent,
fill = tx_name), stat = 'summary', fun.data = mean_se) +
stat_summary(aes(x = fct_relevel(tx, ord),
y = percent),
fun.data = mean_se,
geom = "errorbar") +
ggpubr::stat_compare_means(aes(x = fct_relevel(tx, ord), y = percent),
ref.group = "DMSO", hide.ns = TRUE,
method = "wilcox.test",
label = "p.signif",
label.y.npc = 0.9,
symnum.args = symnum.args) +
facet_wrap(genotype~fct_relevel(stage, "Pupae", "Adult"))+
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
labs(x = "Treatment", y = "Mean Survival (%)") +
guides(fill = F)
write_csv(fly_count_summary_table, "supplemental_table_fly_counts.csv")
reactable(fly_count_summary_table)
reactable::reactable(fly_count_summary_table)
ggplot(data = fly_counts) +
geom_bar(aes(x = fct_relevel(tx, ord),
y = percent,
fill = tx_name), stat = 'summary', fun.data = mean_se) +
stat_summary(aes(x = fct_relevel(tx, ord),
y = percent),
fun.data = mean_se,
geom = "errorbar") +
ggpubr::stat_compare_means(aes(x = fct_relevel(tx, ord), y = percent),
ref.group = "DMSO", hide.ns = TRUE,
method = "wilcox.test",
label = "p.signif",
label.y.npc = 0.9,
symnum.args = symnum.args) +
facet_wrap(genotype~fct_relevel(stage, "Pupae", "Adult"))+
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
labs(x = "Treatment", y = "Mean Survival (%)") +
guides(fill = F)
fly_count_summary_table <- fly_counts %>%
group_by(tx, genotype, stage) %>%
summarize(mean_percent_survival = mean(percent),
std_dev_survival = sd(percent))
write_csv(fly_count_summary_table, "supplemental_table_fly_counts.csv")
reactable::reactable(fly_count_summary_table)
reactable::reactable(fly_count_summary_table %>% filter(genotype == 'RET2B', stage == "Adult"))
reactable::reactable(fly_count_summary_table %>% filter(genotype == 'RET2B', stage == "Adult", grepl(tx, ZINC)))
reactable::reactable(fly_count_summary_table %>% filter(genotype == 'RET2B', stage == "Adult", grepl(tx, "ZINC")))
reactable::reactable(fly_count_summary_table %>% filter(genotype == 'RET2B', stage == "Adult", grepl("ZINC", tx)))
